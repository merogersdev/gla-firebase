---
name: Build and Push Focus to AWS ECR
on:
  push:
    branches: [feat/50-add-github-cicd-pipeline]

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag and Push Image to AWS ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: gla-firebase
          IMAGE_TAG: latest
        run: |
          docker build \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --build-arg VITE_API_KEY=${{ secrets.VITE_API_KEY }} \
          --build-arg VITE_APP_ID=${{ secrets.VITE_APP_ID }} \
          --build-arg VITE_AUTH_DOMAIN=${{ secrets.VITE_AUTH_DOMAIN }} \
          --build-arg VITE_MESSAGING_SENDER_ID=${{ secrets.VITE_MESSAGING_SENDER_ID }} \
          --build-arg VITE_PROJECT_ID=${{ secrets.VITE_PROJECT_ID }} \
          --build-arg VITE_QUERY_DEVTOOLS=${{ secrets.VITE_QUERY_DEVTOOLS }} \
          --build-arg VITE_STORAGE_BUCKET=${{ secrets.VITE_STORAGE_BUCKET }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to AWS EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      SHA: ${{ github.sha }}
      REPOSITORY: gla-firebase
      IMAGE_TAG: latest
      PORT: 3001
    steps:
      # Configure AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      # ECR Login
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      # SSH Login and Deployment
      - name: Docker pull & run from github
        uses: appleboy/ssh-action@master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ env.PORT }}
          envs: ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG,SHA
          script: |
            aws ecr get-login-password --region ca-central-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker stop $ECR_REPOSITORY || true && docker rm $ECR_REPOSITORY || true
            docker run -d -p $PORT:80 --name $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
